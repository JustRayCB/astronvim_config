return {
  -- "jose-elias-alvarez/null-ls.nvim",
  -- opts = function(_, config)
  --   -- config variable is the default configuration table for the setup function call
  --   local null_ls = require "null-ls"
  --
  --   -- Check supported formatters and linters
  --   -- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/formatting
  --   -- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/diagnostics
  --   config.sources = {
  --     -- Set a formatter
  --     -- null_ls.builtins.formatting.stylua,
  --     -- null_ls.builtins.formatting.prettier,
  --     -- require("null-ls").builtins.diagnostics.sqlfluff.with {
  --     --   extra_args = { "--dialect", "mysql" }, -- change to your dialect
  --     --   filetypes = { "sql", "mysql" },
  --     -- },
  --       require("null-ls").builtins.diagnostics.mypy.with {
  --         extra_args = { "--check-untyped-defs" },
  --         filetypes = { "python" },
  --       },
  --
  --       -- clang-format 
  --       require("null-ls").builtins.formatting.clang_format.with { 
  --           extra_args = { "-style=file" }, 
  --           filetypes = { "c", "cpp", "objc", "objcpp" }, 
  --           condition = function(utils) 
  --               return utils.root_has_file(".clang-format") 
  --           end,
  --           -- generator_opts = {
  --           --     command = "clang-format",
  --           --     to_stdin = true,
  --           --     args = { "-assume-filename", "$FILENAME" },
  --           -- },
  --       }
  --     -- require("null-ls").builtins.completion.luasnip.with {
  --     --   filetypes = { "mysql", "sql", "python" },
  --     -- },
  --   }
  --   return config -- return final config table
  -- end,
}
